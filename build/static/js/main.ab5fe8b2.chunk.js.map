{"version":3,"sources":["common.js","Note.jsx","Matrix.jsx","App.js","index.js"],"names":["INACTIVE_OPACITY","INITIAL_DELAY","sound","Tone","envelope","releaseCurve","toDestination","lookAhead","clearAllTimeouts","id","window","setTimeout","clearTimeout","elementsMap","Map","sounds","i","document","getElementById","volume","push","playSound","index","currentTime","play","AllNotes","Note","j","note","sheet","mod","speed","imported","currentNote","delay","x","y","size","useState","opacity","setOpacity","c","toString","toUpperCase","substring","length","intToRGB","str","hash","charCodeAt","hashCode","color","value","style","ref","element","set","className","title","onClick","triggerAttackRelease","transform","backgroundColor","Matrix","setMod","width","setWidth","offset","setOffset","shift","setShift","setVolume","Notes","setSpeed","pagination","setPagination","setSize","setSheet","reload","setReload","load","setLoad","currentMusic","setCurrentMusic","isMusicListOpen","setIsMusicListOpen","screenshotCanvas","setScreenshotCanvas","isScreenshotShown","setScreenshotIsShow","resize","initial","bounds","setBounds","useLayoutEffect","updateSize","w","Math","floor","innerWidth","h","innerHeight","addEventListener","removeEventListener","useWindowSize","useEffect","v","callibrateNotes","editMode","pages","Object","values","reduce","acc","n","max","iteratePages","page","playInterval","localMax","Infinity","sheetArr","map","get","firstChild","JSON","stringify","forEach","onChange","e","target","min","textAlign","fontSize","val","type","step","amount","s","adjustVolume","html2canvas","querySelector","canvas","onclone","_","notes","querySelectorAll","then","handler","innerHTML","appendChild","history","replaceState","onKeyPress","key","includes","current","parse","position","display","gridTemplateColumns","repeat","Array","fill","row","col","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ab5fe8b2.chunk.js","sourcesContent":["import * as Tone from 'tone'\nexport const INACTIVE_OPACITY = '0.1'\nexport const INITIAL_DELAY = 100\nexport const SECOND = 1000\nexport const getNoteId = (note) => `${note.x}:${note.y}`\nexport const hashCode = (str) => {\n  let hash = 0\n  for (let i = 0; i < str.length; i++)\n    hash = str.charCodeAt(i) + ((hash << 5) - hash)\n  return hash\n}\nexport const intToRGB = (i) => {\n  const c = (i & 0x00ffffff).toString(16).toUpperCase()\n  return '000000'.substring(0, 6 - c.length) + c\n}\nexport const matrix = (x, y, v) =>\n  Array(x)\n    .fill(v)\n    .map((_) => Array(y).fill(v))\n\nexport const sound = new Tone.PolySynth(Tone.Synth, {\n  envelope: {\n    releaseCurve: 'sine',\n  },\n})\n  // .connect(new Tone.AutoPanner('8n').toDestination())\n  // .connect(new Tone.Distortion(2.8).toDestination())\n  // .connect(new Tone.Chorus(4, 3.5, 0.5).toDestination())\n  // .connect(new Tone.Tremolo(9, 0.75).toDestination())\n  // .connect(new Tone.Vibrato(9, 0.75).toDestination())\n  .toDestination()\nTone.context.lookAhead = 0.2\nexport const clearAllTimeouts = () => {\n  let id = window.setTimeout(() => {}, 0)\n  while (id--) {\n    window.clearTimeout(id)\n  }\n}\nexport const elementsMap = new Map()\nexport const sounds = []\nfor (let i = 0; i < 7; i++) {\n  const sound = document.getElementById(`switch${i}`)\n  sound.volume = 30 / 100\n  sounds.push(sound)\n}\nexport const playSound = (index) => {\n  const sound = sounds[index]\n  if (sound) {\n    sound.currentTime = 0\n    sound.play()\n  }\n}\nexport const AllNotes = [\n  'A0',\n  'B0',\n  'C1',\n  'D1',\n  'E1',\n  'F1',\n  'G1',\n  'A1',\n  'B1',\n  'C2',\n  'D2',\n  'E2',\n  'F2',\n  'G2',\n  'A2',\n  'B2',\n  'C3',\n  'D3',\n  'E3',\n  'F3',\n  'G3',\n  'A3',\n  'B3',\n  'C4',\n  'D4',\n  'E4',\n  'F4',\n  'G4',\n  'A4',\n  'B4',\n  'C5',\n  'D5',\n  'E5',\n  'F5',\n  'G5',\n  'A5',\n  'B5',\n  'C6',\n  'A6',\n  'B6',\n  'C7',\n  'D7',\n  'E7',\n  'F7',\n  'G7',\n  'A7',\n  'B7',\n  'B8',\n]\n","import React, { useState } from 'react'\nimport { elementsMap, hashCode, INACTIVE_OPACITY, intToRGB } from './common'\n\nconst Note = ({ i, j, note, sound, sheet, mod, volume, speed }) => {\n  const id = `${i}:${j}`\n  const imported = sheet[id] || null\n  const currentNote = imported ? sheet[id] : { delay: 0.1, x: i, y: j }\n  const delay = currentNote.delay\n  const size = currentNote.delay > 0.1 ? currentNote.delay + 1 : 1\n  // const [delay, setDelay] = useState(currentNote.delay);\n  // const [size, setSize] = useState(\n  //   currentNote.delay > 0.1 ? currentNote.delay + 1 : 1\n  // );\n\n  const [opacity, setOpacity] = useState(imported ? '1' : INACTIVE_OPACITY)\n  const [color] = useState('#' + intToRGB(hashCode(note + '1230')))\n  if (imported) {\n    sheet[id] = currentNote\n    sheet[id].value = note\n  }\n  return (\n    <button\n      style={{ opacity }}\n      ref={(element) => {\n        if (i < mod) {\n          elementsMap.set(id, element)\n        }\n      }}\n      className=\"note-button\"\n      id={id}\n      title={note}\n      // onKeyPress={e => {\n      //   if (e.key === '=') {\n      //     setDelay(Math.max(0, delay + 0.05));\n      //     setSize(delay + 1);\n      //   } else if (e.key === '-') {\n      //     setDelay(Math.max(0, delay - 0.05));\n      //     setSize(delay + 1);\n      //   }\n      // }}\n      onClick={() => {\n        const id = `${i}:${j}`\n        if (sheet[id]) {\n          setOpacity(INACTIVE_OPACITY)\n          delete sheet[id]\n        } else {\n          setOpacity('1')\n          sound.volume.value = volume - 30\n          sound.triggerAttackRelease(note, delay * speed)\n          sheet[id] = { value: note, delay, x: i, y: j }\n        }\n      }}\n    >\n      <div\n        style={{\n          transform: `scale(1, ${size})`,\n          backgroundColor: color,\n        }}\n        className=\"shape\"\n      ></div>\n    </button>\n  )\n}\nexport default Note\n","import {\n  playSound,\n  elementsMap,\n  AllNotes,\n  sounds,\n  matrix,\n  sound,\n  clearAllTimeouts,\n  INACTIVE_OPACITY,\n  INITIAL_DELAY,\n  SECOND,\n} from './common.js'\nimport React, { useState, useEffect, useLayoutEffect } from 'react'\nimport * as html2canvas from 'html2canvas'\nimport Note from './Note.jsx'\n\nconst useWindowSize = (initial) => {\n  const [bounds, setBounds] = useState(initial)\n  useLayoutEffect(() => {\n    const updateSize = () => {\n      setBounds({\n        w: Math.floor(window.innerWidth / 50),\n        h: Math.floor(window.innerHeight / 45),\n      })\n    }\n    window.addEventListener('resize', updateSize)\n    updateSize()\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n  return bounds\n}\n\nconst Matrix = () => {\n  const [mod, setMod] = useState(15)\n  const [width, setWidth] = useState(30)\n  const [offset, setOffset] = useState(15)\n  const [shift, setShift] = useState(0)\n  const [volume, setVolume] = useState(30)\n  const [Notes] = useState(AllNotes) //.slice(shift, offset + width)\n  const [speed, setSpeed] = useState(0.25)\n  const [pagination, setPagination] = useState(0)\n  const [size, setSize] = useState(15)\n  const [sheet, setSheet] = useState({})\n  const [reload, setReload] = useState(true)\n  const [load, setLoad] = useState(false)\n  const [currentMusic, setCurrentMusic] = useState('')\n  const [isMusicListOpen, setIsMusicListOpen] = useState(false)\n  const [screenshotCanvas, setScreenshotCanvas] = useState()\n  const [isScreenshotShown, setScreenshotIsShow] = useState(false)\n\n  const resize = useWindowSize({ w: width, h: mod })\n\n  useEffect(() => {\n    setLoad(false)\n    setWidth(resize.w)\n    setMod(resize.h)\n    setLoad(true)\n  }, [resize.w, resize.h])\n\n  useEffect(() => setLoad(true), [reload])\n\n  const adjustVolume = (volume) => {\n    sounds.forEach((s) => (s.volume = volume / 100))\n    setVolume(volume)\n  }\n\n  const addMusicFromList = (current) => {\n    setLoad(false)\n    setSpeed(current.speed)\n    setOffset(current.offset)\n    setShift(current.shift)\n    setSheet(current.sheet)\n    setIsMusicListOpen(false)\n    callibrateNotes(current.sheet)\n    // setCurrentMusic(JSON.stringify(current));\n  }\n  const callibrateNotes = (sheet) => {\n    editMode()\n    let pages = Math.floor(\n      Object.values(sheet).reduce((acc, n) => (acc = Math.max(acc, n.x)), 0) /\n        mod\n    )\n    const iteratePages = (page) => {\n      setLoad(false)\n      if (page <= pages) {\n        setPagination(size * page)\n        setTimeout(() => iteratePages(++page), 150)\n      } else setPagination(0)\n      setLoad(true)\n    }\n    iteratePages(0)\n  }\n\n  const offsetNotes = (value) => {\n    setLoad(false)\n    playSound(3)\n    callibrateNotes(sheet)\n    setReload(!reload)\n  }\n  const clearNotes = () => {\n    clearAllTimeouts()\n    setSheet({})\n    playSound(0)\n    setPagination(0)\n    setLoad(false)\n    setReload(!reload)\n    // eslint-disable-next-line no-restricted-globals\n    history.replaceState({}, null, '/')\n  }\n\n  const playInterval = () => {\n    let localMax = -Infinity\n    setTimeout(() => {\n      if (size !== mod) setSize(mod)\n      clearAllTimeouts()\n      const sheetArr = Object.values(sheet).map((note) => {\n        const { x, y } = note\n        const element = elementsMap.get(`${(x + pagination) % mod}:${y}`)\n        if (element) {\n          element.style.opacity = INACTIVE_OPACITY\n          element.firstChild.style.transform = `scale(1)`\n        }\n        localMax = Math.max(localMax, x)\n        return { note, element, index: x }\n      })\n\n      for (let i = 0; i < localMax; i++)\n        if (!sheetArr[i]) sheetArr[i] = { note: null, element: null, index: i }\n      setCurrentMusic(JSON.stringify({ sheet, offset, speed, shift }))\n      sheetArr.forEach(\n        ({ note, element, index }) =>\n          note &&\n          setTimeout(() => {\n            const { value, delay } = note\n            sound.volume.value = volume - 30\n            sound.triggerAttackRelease(value, Math.max(delay * speed, 0.1))\n            if (element) element.style.opacity = '1'\n            // element.firstChild.style.transform = `scale(1, ${\n            //   delay > 0.1 ? delay + 1 : 1\n            // })`\n            setTimeout(() => {\n              if (element)\n                setTimeout(() => {\n                  element.style.opacity = INACTIVE_OPACITY\n                  element.firstChild.style.transform = `scale(1)`\n                }, (speed * delay + 1) * INITIAL_DELAY + INITIAL_DELAY)\n              index === localMax && setTimeout(() => playInterval(), SECOND)\n            }, (speed * delay + 1) * INITIAL_DELAY)\n          }, speed * index * SECOND + INITIAL_DELAY * 2)\n      )\n    }, INITIAL_DELAY)\n  }\n\n  const play = () => {\n    if (pagination !== 0) {\n      setPagination(0)\n      setLoad(false)\n      setReload(!reload)\n    }\n    playInterval()\n  }\n\n  const editMode = () => {\n    setLoad(false)\n    clearAllTimeouts()\n    setReload(!reload)\n  }\n\n  return (\n    <div>\n      <div className={`options  ${isMusicListOpen ? 'blured' : ''}`}>\n        <div className=\"menu\">\n          <button\n            className=\"ui label\"\n            title=\"shift right\"\n            onClick={() => {\n              setShift(shift + 1)\n              playSound(5)\n            }}\n          >\n            {'>>'}\n          </button>\n          <input\n            className=\"ui\"\n            onChange={(e) => {\n              setShift(+e.target.value || 0)\n            }}\n            title=\"shift\"\n            value={shift}\n            min={-AllNotes.length}\n            max={AllNotes.length}\n            style={{\n              width: 25,\n              textAlign: 'center',\n              fontSize: 10,\n            }}\n          />\n          <button\n            className=\"ui label\"\n            title=\"shift left\"\n            onClick={() => {\n              setShift(shift - 1)\n              playSound(5)\n            }}\n          >\n            {'<<'}\n          </button>\n          <input\n            title=\"offset\"\n            className=\"ui\"\n            onChange={(e) => {\n              const val = +e.target.value\n              setOffset(val)\n              offsetNotes(offset)\n            }}\n            value={offset}\n            type=\"number\"\n            min={0}\n            max={AllNotes.length}\n            style={{\n              width: 40,\n              textAlign: 'center',\n              fontSize: 10,\n            }}\n          />\n          <input\n            className=\"ui\"\n            title=\"change speed\"\n            onChange={(e) => playSound(5) || setSpeed(+e.target.value)}\n            step=\"0.1\"\n            type=\"number\"\n            style={{\n              width: 80,\n              fontSize: 10,\n              textAlign: 'center',\n            }}\n            value={speed}\n          />\n\n          <input\n            className=\"ui\"\n            onChange={(e) => {\n              const amount = +e.target.value\n              if (amount >= 0 && amount <= 100) {\n                adjustVolume(amount)\n                playSound(5)\n              }\n            }}\n            title=\"volume\"\n            value={volume}\n            type=\"number\"\n            min={0}\n            max={100}\n            style={{\n              width: 50,\n              textAlign: 'center',\n              fontSize: 10,\n            }}\n          />\n          <button\n            onClick={() => {\n              playSound(1)\n              setScreenshotIsShow(false)\n              html2canvas(document.querySelector('.matrix'), {\n                backgroundColor: 'transparent',\n                canvas: screenshotCanvas,\n                onclone: (_, element) => {\n                  const notes = element.querySelectorAll('.note-button')\n                  for (const note of notes)\n                    if (note.style.opacity === INACTIVE_OPACITY)\n                      note.style.opacity = '0'\n                },\n              }).then((canvas) => {\n                if (!screenshotCanvas) {\n                  const handler = document.getElementById('screenshotHandler')\n                  handler.innerHTML = ''\n                  handler.appendChild(canvas)\n                } else setScreenshotCanvas(screenshotCanvas)\n                setScreenshotIsShow(true)\n                playSound(3)\n              })\n            }}\n            className=\"ui label\"\n          >\n            ghost\n          </button>\n          <button\n            onClick={() => setScreenshotIsShow(!isScreenshotShown)}\n            className=\"ui label\"\n          >\n            {isScreenshotShown ? 'hide' : 'show'}\n          </button>\n        </div>\n\n        <div className=\"tools\">\n          <button onClick={play} title=\"play\" className=\"ui\">\n            {'>'}\n          </button>\n          <button\n            onClick={() => {\n              editMode()\n              playSound(1)\n            }}\n            title=\"stop\"\n            className=\"ui\"\n            style={{\n              fontSize: 20,\n            }}\n          >\n            #\n          </button>\n\n          <button\n            onClick={() => {\n              if (pagination <= 0) return\n              setLoad(false)\n              setPagination(pagination - size)\n              setReload(!reload)\n              playSound(4)\n            }}\n            title=\"up\"\n            className=\"ui\"\n          >\n            &#9650;\n          </button>\n          <button title=\"page\" className=\"ui\">\n            {pagination / size}\n          </button>\n          <button\n            title=\"down\"\n            onClick={(e) => {\n              setLoad(false)\n              setPagination(size + pagination)\n              setReload(!reload)\n              playSound(4)\n            }}\n            className=\"ui\"\n          >\n            &#9660;\n          </button>\n\n          <button title=\"erase\" className=\"ui\" onClick={() => clearNotes()}>\n            x\n          </button>\n\n          <input\n            onKeyPress={(e) =>\n              e.key === 'Enter' && e.target.value.includes('sheet')\n                ? addMusicFromList(JSON.parse(e.target.value))\n                : null\n            }\n            title=\"title\"\n            onChange={(e) => setCurrentMusic(e.target.value)}\n            value={currentMusic}\n            className=\"ui title\"\n          />\n        </div>\n      </div>\n      <div\n        id=\"screenshotHandler\"\n        style={{\n          position: 'absolute',\n          display: isScreenshotShown ? 'block' : 'none',\n        }}\n      ></div>\n      {load && (\n        <div\n          className={`matrix ${isMusicListOpen ? 'blured' : ''}`}\n          style={{ gridTemplateColumns: 'auto '.repeat(width) }}\n        >\n          {matrix(mod, width, null).map((row, i) =>\n            row.map((col, j) => (\n              <Note\n                i={i + pagination}\n                j={j - shift}\n                key={i + '-' + (j - shift)}\n                note={Notes[j - shift + offset]}\n                sound={sound}\n                sheet={sheet}\n                speed={speed}\n                mod={mod}\n                volume={volume}\n              />\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Matrix\n","import React from 'react'\nimport './App.css'\nimport Matrix from './Matrix.jsx'\n\nconst App = () => (\n  <div className=\"App\">\n    <Matrix />\n  </div>\n)\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}